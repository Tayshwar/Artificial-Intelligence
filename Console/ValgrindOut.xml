<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: /home/sabrina/Documents/Chatbot/bin/Debug/Chatbot</line>
</preamble>

<pid>23518</pid>
<ppid>25871</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--leak-check=full</arg>
    <arg>--track-origins=yes</arg>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/sabrina/Documents/Chatbot/ValgrindOut.xml</arg>
  </vargv>
  <argv>
    <exe>/home/sabrina/Documents/Chatbot/bin/Debug/Chatbot</exe>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.321 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x483A8B5</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>__strlen_sse2</fn>
    </frame>
    <frame>
      <ip>0x49812B8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*)</fn>
    </frame>
    <frame>
      <ip>0x1091E6</ip>
      <obj>/home/sabrina/Documents/Chatbot/bin/Debug/Chatbot</obj>
      <fn>main</fn>
      <dir>/home/sabrina/Documents/Chatbot</dir>
      <file>main.cpp</file>
      <line>15</line>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a stack allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x109185</ip>
      <obj>/home/sabrina/Documents/Chatbot/bin/Debug/Chatbot</obj>
      <fn>main</fn>
      <dir>/home/sabrina/Documents/Chatbot</dir>
      <file>main.cpp</file>
      <line>7</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x483A8C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>__strlen_sse2</fn>
    </frame>
    <frame>
      <ip>0x49812B8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*)</fn>
    </frame>
    <frame>
      <ip>0x1091E6</ip>
      <obj>/home/sabrina/Documents/Chatbot/bin/Debug/Chatbot</obj>
      <fn>main</fn>
      <dir>/home/sabrina/Documents/Chatbot</dir>
      <file>main.cpp</file>
      <line>15</line>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a stack allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x109185</ip>
      <obj>/home/sabrina/Documents/Chatbot/bin/Debug/Chatbot</obj>
      <fn>main</fn>
      <dir>/home/sabrina/Documents/Chatbot</dir>
      <file>main.cpp</file>
      <line>7</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2</unique>
  <tid>1</tid>
  <kind>SyscallParam</kind>
  <what>Syscall param write(buf) points to uninitialised byte(s)</what>
  <stack>
    <frame>
      <ip>0x4B00FD4</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.28.so</obj>
      <fn>write</fn>
      <dir>/build/glibc-B9XfQf/glibc-2.28/io/../sysdeps/unix/sysv/linux</dir>
      <file>write.c</file>
      <line>26</line>
    </frame>
    <frame>
      <ip>0x4A8233C</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.28.so</obj>
      <fn>_IO_file_write@@GLIBC_2.2.5</fn>
      <dir>/build/glibc-B9XfQf/glibc-2.28/libio</dir>
      <file>fileops.c</file>
      <line>1188</line>
    </frame>
    <frame>
      <ip>0x4A83A70</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.28.so</obj>
      <fn>new_do_write</fn>
      <dir>/build/glibc-B9XfQf/glibc-2.28/libio</dir>
      <file>fileops.c</file>
      <line>456</line>
    </frame>
    <frame>
      <ip>0x4A83A70</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.28.so</obj>
      <fn>_IO_do_write@@GLIBC_2.2.5</fn>
      <dir>/build/glibc-B9XfQf/glibc-2.28/libio</dir>
      <file>fileops.c</file>
      <line>433</line>
    </frame>
    <frame>
      <ip>0x4A816F7</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.28.so</obj>
      <fn>_IO_file_sync@@GLIBC_2.2.5</fn>
      <dir>/build/glibc-B9XfQf/glibc-2.28/libio</dir>
      <file>fileops.c</file>
      <line>806</line>
    </frame>
    <frame>
      <ip>0x4A7632C</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.28.so</obj>
      <fn>fflush</fn>
      <dir>/build/glibc-B9XfQf/glibc-2.28/libio</dir>
      <file>iofflush.c</file>
      <line>40</line>
    </frame>
    <frame>
      <ip>0x498001D</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::ostream::flush()</fn>
    </frame>
    <frame>
      <ip>0x49109DB</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::ios_base::Init::~Init()</fn>
    </frame>
    <frame>
      <ip>0x4A3B42B</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.28.so</obj>
      <fn>__run_exit_handlers</fn>
      <dir>/build/glibc-B9XfQf/glibc-2.28/stdlib</dir>
      <file>exit.c</file>
      <line>108</line>
    </frame>
    <frame>
      <ip>0x4A3B559</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.28.so</obj>
      <fn>exit</fn>
      <dir>/build/glibc-B9XfQf/glibc-2.28/stdlib</dir>
      <file>exit.c</file>
      <line>139</line>
    </frame>
    <frame>
      <ip>0x4A1B0A1</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.28.so</obj>
      <fn>(below main)</fn>
      <dir>/build/glibc-B9XfQf/glibc-2.28/csu/../csu</dir>
      <file>libc-start.c</file>
      <line>342</line>
    </frame>
  </stack>
  <auxwhat>Address 0x4d9ec88 is 8 bytes inside a block of size 4,096 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x483774F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4A75C9B</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.28.so</obj>
      <fn>_IO_file_doallocate</fn>
      <dir>/build/glibc-B9XfQf/glibc-2.28/libio</dir>
      <file>filedoalloc.c</file>
      <line>101</line>
    </frame>
    <frame>
      <ip>0x4A84EC1</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.28.so</obj>
      <fn>_IO_doallocbuf</fn>
      <dir>/build/glibc-B9XfQf/glibc-2.28/libio</dir>
      <file>genops.c</file>
      <line>347</line>
    </frame>
    <frame>
      <ip>0x4A83FC7</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.28.so</obj>
      <fn>_IO_file_overflow@@GLIBC_2.2.5</fn>
      <dir>/build/glibc-B9XfQf/glibc-2.28/libio</dir>
      <file>fileops.c</file>
      <line>752</line>
    </frame>
    <frame>
      <ip>0x4A82A14</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.28.so</obj>
      <fn>_IO_file_xsputn@@GLIBC_2.2.5</fn>
      <dir>/build/glibc-B9XfQf/glibc-2.28/libio</dir>
      <file>fileops.c</file>
      <line>1251</line>
    </frame>
    <frame>
      <ip>0x4A771D7</ip>
      <obj>/lib/x86_64-linux-gnu/libc-2.28.so</obj>
      <fn>fwrite</fn>
      <dir>/build/glibc-B9XfQf/glibc-2.28/libio</dir>
      <file>iofwrite.c</file>
      <line>39</line>
    </frame>
    <frame>
      <ip>0x4980F53</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*, long)</fn>
    </frame>
    <frame>
      <ip>0x49812C6</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25</obj>
      <fn>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*)</fn>
    </frame>
    <frame>
      <ip>0x1091AE</ip>
      <obj>/home/sabrina/Documents/Chatbot/bin/Debug/Chatbot</obj>
      <fn>main</fn>
      <dir>/home/sabrina/Documents/Chatbot</dir>
      <file>main.cpp</file>
      <line>11</line>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a stack allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x109185</ip>
      <obj>/home/sabrina/Documents/Chatbot/bin/Debug/Chatbot</obj>
      <fn>main</fn>
      <dir>/home/sabrina/Documents/Chatbot</dir>
      <file>main.cpp</file>
      <line>7</line>
    </frame>
  </stack>
</error>


<status>
  <state>FINISHED</state>
  <time>00:00:16:52.712 </time>
</status>

<errorcounts>
  <pair>
    <count>1</count>
    <unique>0x2</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x1</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

